generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id    Int     @id @default(autoincrement())
  first_name String?
  last_name  String?
  email      String  @unique
}

model Note {
  note_id  Int    @id @default(autoincrement())
  content  String
  user_id  Int
  class_id Int
}

model Document {
  document_id Int    @id @default(autoincrement())
  user_id     Int
  class_id    Int
  file_path   String
}

model ChatHistory {
  chat_id   Int      @id @default(autoincrement())
  message   String
  timestamp DateTime @default(now())
  user_id   Int
  class_id  Int
}

model Class {
  class_id   Int    @id @default(autoincrement())
  class_name String
  user_id    Int
}

model User {
  user_id        Int            @id @default(autoincrement())
  email          String         @unique
  notes          Note[] //used for relations with other fields
  documents      Document[]
  chatHistories  ChatHistory[]
  classes        Class[]
}

model Note {
  note_id  Int    @id @default(autoincrement())
  name     String
  content  String
  user     User   @relation(fields: [user_id], references: [user_id])
  user_id  Int    
  class    Class  @relation(fields: [class_id], references: [class_id])
  class_id Int    
}

model Document {
  document_id Int    @id @default(autoincrement())
  name        String
  content     String
  user        User   @relation(fields: [user_id], references: [user_id])
  user_id     Int    
  class       Class  @relation(fields: [class_id], references: [class_id])
  class_id    Int    
}

model ChatHistory {
  chat_id          Int          @id @default(autoincrement())
  timestamp        DateTime     @default(now())
  user             User         @relation(fields: [user_id], references: [user_id])
  user_id          Int      
  class            Class        @relation(fields: [class_id], references: [class_id])
  class_id         Int
  chatMessages     ChatMessage[]
}

model ChatMessage {
  message_id       Int          @id @default(autoincrement())
  content          String
  direction        String       // "sent" or "received"
  chatHistory      ChatHistory  @relation(fields: [chat_id], references: [chat_id])
  chat_id          Int
}

model Class {
  class_id       Int            @id @default(autoincrement())
  class_name     String
  user           User           @relation(fields: [user_id], references: [user_id])
  user_id        Int
  notes          Note[]
  documents      Document[]
  chatHistories  ChatHistory[]
}




